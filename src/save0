 private void index(List<String> texts) {
        //homework
        Map<String, List<List<Integer>>> indexes = new HashMap<>();
        int n = texts.size();
        String text = texts.toString();

        //split words from docs then add to array
        String[] wordsArr = text.split(",");
        text = String.join("", wordsArr);//string containing words split by space & comma
        text = text.replaceAll("\\p{P}", "");//remove brackets from string
        wordsArr = text.split(" ");//array containing words
        ArrayList<String> wordsList = new ArrayList<>();//list holding final split words

        //add each word into wordList
        for (int i = 0; i < wordsArr.length; i++) {
            if (!wordsList.contains(wordsArr[i])) {
                wordsList.add(wordsArr[i]);
            }
        }


        //display contents of arr and list
        System.out.println("wordsList" + wordsList.toString());
        System.out.print("wordsArr:");
        for (int i = 0; i < wordsArr.length; i++) {
            System.out.print(wordsArr[i] + ", ");
        }
        System.out.println();
        List<List<Integer>> docs = new LinkedList<>();
        //add doc ids into docs
        for (int docIndex = 0; docIndex < wordsList.size(); docIndex++) {
            docs = new LinkedList<>();

            //add number of lists corresponding to num of documents provided into docs lists
            for (int i = 0; i < texts.size(); i++) {
                docs.add(new LinkedList<>());
            }
            indexes.put(wordsList.get(docIndex), docs);
        }
        //get word count
        int[] wordCount = new int[texts.size()];
        for (int i = 0; i < texts.size(); i++) {
            //count words in string
            StringTokenizer tokens = new StringTokenizer(texts.get(i));
            //String[] words = texts.get(i).split("\\s+");
            wordCount = new int[texts.size()];
            wordCount[i] = tokens.countTokens();
            //System.out.println(wordCount[i]);
        }

        //add pos val into each doc index
        //traverse each word of each document
        for (int docIndx = 0; docIndx < texts.size(); docIndx++) {
            Scanner scan = new Scanner(texts.get(docIndx));
            int pos = 0;
            while(scan.hasNext()){
                if(wordsList.get(docIndx).equals(scan.next())){
                    docs.get(docIndx).add(pos);
                }
                pos++;
            }
        }
        System.out.println("indexes: " + indexes);
    }
System.out.println(indexes.get(wordsList.get(4)));
        indexes.get(wordsList.get(4)).get(3).add(1);
        System.out.println( indexes.get(wordsList.get(4)).get(3));


        List<List<Integer>> docs2 = new LinkedList<>();
                indexes.put("cat", docs2);
                docs2.add(new LinkedList<>());
                docs2.get(0).add(10);
                docs2.add(new LinkedList<>());
                System.out.println(indexes.get(0));